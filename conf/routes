# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET            /                                     controllers.Application.index()
GET            /initDB                               controllers.Application.initDb()

# Drone control stuff
GET            /init                                 controllers.Application.initDrone(ip: String, bebop: Boolean)
GET            /battery                              controllers.Application.getBatteryPercentage(id: Long)
GET            /location                             controllers.Application.getLocation(id: Long)
GET            /rotation                             controllers.Application.getRotation(id: Long)
GET            /speed                                controllers.Application.getSpeed(id: Long)
GET            /altitude                             controllers.Application.getAltitude(id: Long)
GET            /version                              controllers.Application.getVersion(id: Long)
GET            /setOutdoor                           controllers.Application.setOutdoor(outdoor: Boolean, id: Long)
GET            /setHull                              controllers.Application.setHull(hull: Boolean, id: Long)
GET            /flattrim                             controllers.Application.flatTrim(id: Long)
GET            /calibrate                            controllers.Application.calibrate(hull: Boolean, outdoor: Boolean, id: Long)
GET            /moveTo                               controllers.Application.moveToLocation(lat: Double, lon: Double, alt: Double, id: Long)
GET            /move                                 controllers.Application.moveVector(vx: Double, vy: Double, vz: Double, vr: Double, id: Long)
GET            /setMaxHeight                         controllers.Application.setMaxHeight(meters: Float, id: Long)
GET             /flip                               controllers.Application.flip(id: Long, flip: String)

GET            /takeoff                              controllers.Application.takeOff(id: Long)
GET            /land                                 controllers.Application.land(id: Long)
GET            /subscribe                            controllers.Application.subscribeMonitor(id: Long)
GET            /unsubscribe                          controllers.Application.unsubscribeMonitor(id: Long)
GET            /testSocket                           controllers.Application.testSocket()
GET            /socket                               controllers.Application.socket()


# Drone REST calls
GET            /drones                               controllers.DroneController.getAll()
POST           /drones                               controllers.DroneController.create()
DELETE         /drones                               controllers.DroneController.deleteAll()
GET            /drones/total                         controllers.DroneController.getTotal()
GET            /drones/types                         controllers.DroneController.getSuportedTypes()
GET            /drones/:id                           controllers.DroneController.get(id: Long)
DELETE         /drones/:id                           controllers.DroneController.delete(id: Long)
PUT            /drones/:id                           controllers.DroneController.update(id: Long)
GET            /drones/:id/testConnection            controllers.DroneController.testConnection(id: Long)
GET            /drones/:id/battery                   controllers.DroneController.battery(id: Long)
GET            /drones/:id/altitude                  controllers.DroneController.altitude(id: Long)
GET            /drones/:id/cameraCapture             controllers.DroneController.cameraCapture(id: Long)
GET            /drones/:id/location                  controllers.DroneController.location(id: Long)
GET            /drones/:id/speed                     controllers.DroneController.speed(id: Long)
GET            /drones/:id/rotation                  controllers.DroneController.rotation(id: Long)
GET            /drones/:id/abort                     controllers.DroneController.emergency(id: Long)

POST           /login                                controllers.SecurityController.login()

# Assignment calls
GET            /assignments                          controllers.AssignmentController.getAll()
POST           /assignments                          controllers.AssignmentController.create()
GET            /assignments/total                    controllers.AssignmentController.getTotal()
GET            /assignments/:id                      controllers.AssignmentController.get(id: Long)
DELETE         /assignments/:id                      controllers.AssignmentController.delete(id: Long)

# User mgmt
GET            /users                                controllers.UserController.getAll()
POST           /users                                controllers.UserController.create()
DELETE         /users                                controllers.UserController.deleteAll()
GET            /users/total                          controllers.UserController.getTotal()
GET            /users/me                             controllers.UserController.currentUser()
GET            /users/:id                            controllers.UserController.get(id: Long)
PUT            /users/:id                            controllers.UserController.update(id: Long)
DELETE         /users/:id                            controllers.UserController.delete(id: Long)
GET            /users/:id/authToken                  controllers.UserController.getUserAuthToken(id: Long)
GET            /users/:id/invalidateAuthToken        controllers.UserController.invalidateAuthToken(id: Long)

#Basestation calls
GET            /basestations                         controllers.BasestationController.getAll()
POST           /basestations                         controllers.BasestationController.create()
GET            /basestations/total                   controllers.BasestationController.getTotal()
GET            /basestations/:id                     controllers.BasestationController.get(id: Long)
PUT            /basestations/:id                     controllers.BasestationController.update(id: Long)
DELETE         /basestations/:id                     controllers.BasestationController.delete(id: Long)

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                         controllers.Assets.at(path="/public", file)

# Options
OPTIONS        /*all                                 controllers.Application.preflight(all)
OPTIONS        /                                     controllers.Application.preflight(String ?= "")
